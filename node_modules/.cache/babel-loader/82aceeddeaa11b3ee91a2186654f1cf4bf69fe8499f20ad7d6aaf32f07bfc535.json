{"ast":null,"code":"var _jsxFileName = \"/Users/jenndryden/Documents/code/happy-sounds/happy-sounds/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport logo from './logo.png';\nimport name from './jenn.png';\nimport rain from './rain.mp3';\nimport brownnoise from './brownnoise.mp3';\nimport AudioPlayer from 'react-audio-player';\nimport rainlogo from './audionames/rain.png';\nimport laughterlogo from './audionames/laughter.png';\nimport leaveslogo from './audionames/leaves.png';\nimport waveslogo from './audionames/waves.png';\nimport brownnoiselogo from './audionames/brownnoise.png';\nimport bonfirelogo from './audionames/bonfire.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioSliderApp = () => {\n  _s();\n  const [volumes, setVolumes] = useState({});\n  const [audioFiles, setAudioFiles] = useState([{\n    id: 1,\n    volume: 0,\n    src: rain,\n    imgSrc: rainlogo\n  }, {\n    id: 2,\n    volume: 0,\n    src: brownnoise,\n    imgSrc: brownnoiselogo\n  }, {\n    id: 3,\n    volume: 0,\n    src: rain,\n    imgSrc: laughterlogo\n  }, {\n    id: 4,\n    volume: 0,\n    src: rain,\n    imgSrc: waveslogo\n  }, {\n    id: 5,\n    volume: 0,\n    src: rain,\n    imgSrc: bonfirelogo\n  }, {\n    id: 6,\n    volume: 0,\n    src: rain,\n    imgSrc: leaveslogo\n  }]);\n  const handleSliderChange = (id, volume) => {\n    setAudioFiles(prevAudioFiles => prevAudioFiles.map(audioFile => audioFile.id === id ? {\n      ...audioFile,\n      volume\n    } : audioFile));\n    setVolumes(prevVolumes => ({\n      ...prevVolumes,\n      [id]: volume\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"equalizer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          id: \"eqz\",\n          value: \"0\",\n          autocomplete: \"off\",\n          max: \"100\",\n          onclick: \"document.body.style.setProperty('--eqz', this.value);\",\n          oninput: \"document.body.style.setProperty('--eqz', this.value);\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: name,\n      alt: \"Jenn\",\n      className: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      children: audioFiles.map((audioFile, index) => {\n        const angle = index * 360 / audioFiles.length;\n        let positionX = 0;\n        let positionY = 0;\n        if (index === 0 || index === 5 || index === 1) {\n          positionX = 200 * Math.cos(angle * Math.PI / 180) + 250;\n          positionY = 150 * Math.sin(angle * Math.PI / 180);\n        } else {\n          positionX = 200 * Math.cos(angle * Math.PI / 180) - 250;\n          positionY = 150 * Math.sin(angle * Math.PI / 180);\n        }\n        const transform = `translate(${positionX}px, ${positionY}px)`;\n        const volume = volumes[audioFile.id] || 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider\",\n          style: {\n            transform\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: audioFile.imgSrc,\n            alt: audioFile.imgSrc,\n            className: \"audiologo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: volume,\n            onChange: e => handleSliderChange(audioFile.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n            src: audioFile.src,\n            volume: volume / 100,\n            autoPlay: false,\n            controls: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, audioFile.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioSliderApp, \"qDrL5Wcl0dWrO30Hkt7qZmxLCDs=\");\n_c = AudioSliderApp;\nexport default AudioSliderApp;\nvar _c;\n$RefreshReg$(_c, \"AudioSliderApp\");","map":{"version":3,"names":["React","useState","logo","name","rain","brownnoise","AudioPlayer","rainlogo","laughterlogo","leaveslogo","waveslogo","brownnoiselogo","bonfirelogo","jsxDEV","_jsxDEV","AudioSliderApp","_s","volumes","setVolumes","audioFiles","setAudioFiles","id","volume","src","imgSrc","handleSliderChange","prevAudioFiles","map","audioFile","prevVolumes","className","children","class","type","value","autocomplete","max","onclick","oninput","fileName","_jsxFileName","lineNumber","columnNumber","alt","index","angle","length","positionX","positionY","Math","cos","PI","sin","transform","style","min","onChange","e","target","autoPlay","controls","_c","$RefreshReg$"],"sources":["/Users/jenndryden/Documents/code/happy-sounds/happy-sounds/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport logo from './logo.png';\nimport name from './jenn.png';\nimport rain from './rain.mp3';\nimport brownnoise from './brownnoise.mp3';\nimport AudioPlayer from 'react-audio-player';\nimport rainlogo from './audionames/rain.png';\nimport laughterlogo from './audionames/laughter.png';\nimport leaveslogo from './audionames/leaves.png';\nimport waveslogo from './audionames/waves.png';\nimport brownnoiselogo from './audionames/brownnoise.png';\nimport bonfirelogo from './audionames/bonfire.png';\n\n\nconst AudioSliderApp = () => {\n  const [volumes, setVolumes] = useState({});\n  const [audioFiles, setAudioFiles] = useState([\n    { id: 1, volume: 0, src: rain, imgSrc: rainlogo },\n    { id: 2, volume: 0, src: brownnoise, imgSrc: brownnoiselogo },\n    { id: 3, volume: 0, src: rain, imgSrc: laughterlogo},\n    { id: 4, volume: 0, src: rain, imgSrc: waveslogo },\n    { id: 5, volume: 0, src: rain, imgSrc: bonfirelogo },\n    { id: 6, volume: 0, src: rain, imgSrc: leaveslogo },\n  ]);\n\n  const handleSliderChange = (id, volume) => {\n    setAudioFiles((prevAudioFiles) =>\n      prevAudioFiles.map((audioFile) =>\n      audioFile.id === id ? { ...audioFile, volume } : audioFile\n      )\n    );\n    setVolumes((prevVolumes) => ({\n      ...prevVolumes,\n      [id]: volume\n    }));\n  };\n\n  return (\n    <div className=\"container\">\n<div class=\"content\">\n\t<div class=\"equalizer\">\n\t\t<input type=\"range\" id=\"eqz\" value=\"0\" autocomplete=\"off\" max=\"100\" onclick=\"document.body.style.setProperty('--eqz', this.value);\" oninput=\"document.body.style.setProperty('--eqz', this.value);\"></input>\n\t\t<div class=\"number\"></div>\n\t</div>\n</div>\n\n      <img src={logo} alt=\"Logo\" className=\"logo\" />\n      <img src={name} alt=\"Jenn\" className=\"name\" />\n      <div className=\"circle\">\n        {audioFiles.map((audioFile, index) => {\n          const angle = (index * 360) / audioFiles.length;\n          let positionX = 0;\n          let positionY = 0;\n          if (index === 0 || index === 5 || index === 1) {\n            positionX = 200 * Math.cos((angle * Math.PI) / 180) + 250;\n           positionY = 150 * Math.sin((angle * Math.PI) / 180);\n          }\n          else {\n            positionX = 200 * Math.cos((angle * Math.PI) / 180) -250;\n            positionY = 150 * Math.sin((angle * Math.PI) / 180);\n          }\n          const transform = `translate(${positionX}px, ${positionY}px)`;\n            const volume = volumes[audioFile.id] || 0;\n          \n            return (\n              <div key={audioFile.id} className=\"slider\" style={{ transform }}>\n               <img src={audioFile.imgSrc} alt={audioFile.imgSrc} className=\"audiologo\" />\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={volume}\n                  onChange={(e) => handleSliderChange(audioFile.id, e.target.value)}\n                />\n                <br />\n                <AudioPlayer\n                  src={audioFile.src}\n                  volume={volume / 100}\n                  autoPlay={false}\n                  controls={false}\n                />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default AudioSliderApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}