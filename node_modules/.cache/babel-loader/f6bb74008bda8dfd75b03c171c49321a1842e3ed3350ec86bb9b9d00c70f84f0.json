{"ast":null,"code":"var _jsxFileName = \"/Users/jenndryden/Documents/code/happy-sounds/happy-sounds/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.png';\nimport name from './jenn.png';\nimport rain from './rain.mp3';\nimport brownnoise from './brownnoise.mp3';\nimport AudioPlayer from 'react-audio-player';\nimport rainlogo from './audionames/rain.png';\nimport laughterlogo from './audionames/laughter.png';\nimport leaveslogo from './audionames/leaves.png';\nimport waveslogo from './audionames/waves.png';\nimport brownnoiselogo from './audionames/brownnoise.png';\nimport bonfirelogo from './audionames/bonfire.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sliderStyle = {\n  WebkitAppearance: 'none',\n  background: 'white',\n  width: '90%',\n  maxWidth: '500px',\n  outline: 'none'\n};\nconst AudioSliderApp = () => {\n  _s();\n  const [volumes, setVolumes] = useState({});\n  const [audioFiles, setAudioFiles] = useState([{\n    id: 1,\n    volume: 0,\n    src: rain,\n    imgSrc: rainlogo\n  }, {\n    id: 2,\n    volume: 0,\n    src: brownnoise,\n    imgSrc: brownnoiselogo\n  }, {\n    id: 3,\n    volume: 0,\n    src: rain,\n    imgSrc: laughterlogo\n  }, {\n    id: 4,\n    volume: 0,\n    src: rain,\n    imgSrc: waveslogo\n  }, {\n    id: 5,\n    volume: 0,\n    src: rain,\n    imgSrc: bonfirelogo\n  }, {\n    id: 6,\n    volume: 0,\n    src: rain,\n    imgSrc: leaveslogo\n  }]);\n  const handleSliderChange = (id, volume) => {\n    setAudioFiles(prevAudioFiles => prevAudioFiles.map(audioFile => audioFile.id === id ? {\n      ...audioFile,\n      volume\n    } : audioFile));\n    setVolumes(prevVolumes => ({\n      ...prevVolumes,\n      [id]: volume\n    }));\n  };\n  const [sliderValue, setSliderValue] = useState(0);\n  useEffect(() => {\n    const input = document.getElementById('slider');\n    input.addEventListener('input', event => {\n      const value = Number(input.value) / 100;\n      input.style.setProperty('--thumb-rotate', `${value * 720}deg`);\n      setSliderValue(Math.round(value * 50));\n    });\n    return () => {\n      input.removeEventListener('input');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"slider\",\n      name: \"slider\",\n      type: \"range\",\n      value: sliderValue,\n      style: sliderStyle,\n      className: \"input-thumb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: name,\n      alt: \"Jenn\",\n      className: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      children: audioFiles.map((audioFile, index) => {\n        const angle = index * 360 / audioFiles.length;\n        let positionX = 0;\n        let positionY = 0;\n        if (index === 0 || index === 5 || index === 1) {\n          positionX = 200 * Math.cos(angle * Math.PI / 180) + 250;\n          positionY = 150 * Math.sin(angle * Math.PI / 180);\n        } else {\n          positionX = 200 * Math.cos(angle * Math.PI / 180) - 250;\n          positionY = 150 * Math.sin(angle * Math.PI / 180);\n        }\n        const transform = `translate(${positionX}px, ${positionY}px)`;\n        const volume = volumes[audioFile.id] || 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider\",\n          style: {\n            transform\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: audioFile.imgSrc,\n            alt: audioFile.imgSrc,\n            className: \"audiologo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: volume,\n            onChange: e => handleSliderChange(audioFile.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n            src: audioFile.src,\n            volume: volume / 100,\n            autoPlay: false,\n            controls: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, audioFile.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioSliderApp, \"fVxkMBGzf85T7n8+cOHgjjV83Yc=\");\n_c = AudioSliderApp;\nexport default AudioSliderApp;\nvar _c;\n$RefreshReg$(_c, \"AudioSliderApp\");","map":{"version":3,"names":["React","useState","useEffect","logo","name","rain","brownnoise","AudioPlayer","rainlogo","laughterlogo","leaveslogo","waveslogo","brownnoiselogo","bonfirelogo","jsxDEV","_jsxDEV","sliderStyle","WebkitAppearance","background","width","maxWidth","outline","AudioSliderApp","_s","volumes","setVolumes","audioFiles","setAudioFiles","id","volume","src","imgSrc","handleSliderChange","prevAudioFiles","map","audioFile","prevVolumes","sliderValue","setSliderValue","input","document","getElementById","addEventListener","event","value","Number","style","setProperty","Math","round","removeEventListener","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","alt","index","angle","length","positionX","positionY","cos","PI","sin","transform","min","max","onChange","e","target","autoPlay","controls","_c","$RefreshReg$"],"sources":["/Users/jenndryden/Documents/code/happy-sounds/happy-sounds/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.png';\nimport name from './jenn.png';\nimport rain from './rain.mp3';\nimport brownnoise from './brownnoise.mp3';\nimport AudioPlayer from 'react-audio-player';\nimport rainlogo from './audionames/rain.png';\nimport laughterlogo from './audionames/laughter.png';\nimport leaveslogo from './audionames/leaves.png';\nimport waveslogo from './audionames/waves.png';\nimport brownnoiselogo from './audionames/brownnoise.png';\nimport bonfirelogo from './audionames/bonfire.png';\n\nconst sliderStyle = {\n  WebkitAppearance: 'none',\n  background: 'white',\n  width: '90%',\n  maxWidth: '500px',\n  outline: 'none',\n};\n\nconst AudioSliderApp = () => {\n  const [volumes, setVolumes] = useState({});\n  const [audioFiles, setAudioFiles] = useState([\n    { id: 1, volume: 0, src: rain, imgSrc: rainlogo },\n    { id: 2, volume: 0, src: brownnoise, imgSrc: brownnoiselogo },\n    { id: 3, volume: 0, src: rain, imgSrc: laughterlogo},\n    { id: 4, volume: 0, src: rain, imgSrc: waveslogo },\n    { id: 5, volume: 0, src: rain, imgSrc: bonfirelogo },\n    { id: 6, volume: 0, src: rain, imgSrc: leaveslogo },\n  ]);\n\n  const handleSliderChange = (id, volume) => {\n    setAudioFiles((prevAudioFiles) =>\n      prevAudioFiles.map((audioFile) =>\n      audioFile.id === id ? { ...audioFile, volume } : audioFile\n      )\n    );\n    setVolumes((prevVolumes) => ({\n      ...prevVolumes,\n      [id]: volume\n    }));\n  };\n\n  const [sliderValue, setSliderValue] = useState(0);\n\n  useEffect(() => {\n    const input = document.getElementById('slider');\n    input.addEventListener('input', (event) => {\n      const value = Number(input.value) / 100;\n      input.style.setProperty('--thumb-rotate', `${value * 720}deg`);\n      setSliderValue(Math.round(value * 50));\n    });\n\n    return () => {\n      input.removeEventListener('input');\n    };\n  }, []);\n\n  return (\n    <div className=\"container\">\n <input id=\"slider\" name=\"slider\" type=\"range\" value={sliderValue} style={sliderStyle} className=\"input-thumb\" />\n\n\n      <img src={logo} alt=\"Logo\" className=\"logo\" />\n      <img src={name} alt=\"Jenn\" className=\"name\" />\n      <div className=\"circle\">\n        {audioFiles.map((audioFile, index) => {\n          const angle = (index * 360) / audioFiles.length;\n          let positionX = 0;\n          let positionY = 0;\n          if (index === 0 || index === 5 || index === 1) {\n            positionX = 200 * Math.cos((angle * Math.PI) / 180) + 250;\n           positionY = 150 * Math.sin((angle * Math.PI) / 180);\n          }\n          else {\n            positionX = 200 * Math.cos((angle * Math.PI) / 180) -250;\n            positionY = 150 * Math.sin((angle * Math.PI) / 180);\n          }\n          const transform = `translate(${positionX}px, ${positionY}px)`;\n            const volume = volumes[audioFile.id] || 0;\n          \n            return (\n              <div key={audioFile.id} className=\"slider\" style={{ transform }}>\n               <img src={audioFile.imgSrc} alt={audioFile.imgSrc} className=\"audiologo\" />\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={volume}\n                  onChange={(e) => handleSliderChange(audioFile.id, e.target.value)}\n                />\n                <br />\n                <AudioPlayer\n                  src={audioFile.src}\n                  volume={volume / 100}\n                  autoPlay={false}\n                  controls={false}\n                />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default AudioSliderApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}